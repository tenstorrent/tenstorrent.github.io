<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="cb__api_8h" kind="file" language="C++">
    <compoundname>cb_api.h</compoundname>
    <includes local="yes">compute_kernel_api/common_globals.h</includes>
    <incdepgraph>
      <node id="1">
        <label>tt_metal/include/compute_kernel_api/cb_api.h</label>
        <link refid="cb__api_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>compute_kernel_api/common_globals.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceckernel">ckernel</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>Â©<sp/>2023<sp/>Tenstorrent<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compute_kernel_api/common_globals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TRISC_PACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;llk_io_pack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TRISC_UNPACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;llk_io_unpack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceckernel" kindref="compound">ckernel</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="namespaceckernel_1a2d20635facce5ae4c7ee121028740b38" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1a2d20635facce5ae4c7ee121028740b38" kindref="member">cb_wait_front</ref>(uint32_t<sp/>cbid,<sp/>uint32_t<sp/>ntiles)<sp/>{<sp/><ref refid="compute__kernel__api_8h_1a5221b9dd336f28fd88546cf7afe5edaf" kindref="member">UNPACK</ref>((llk_wait_tiles(cbid,<sp/>ntiles)));<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="namespaceckernel_1a09e8d82ba4b886f8e90eec038735d759" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1a09e8d82ba4b886f8e90eec038735d759" kindref="member">cb_pop_front</ref>(uint32_t<sp/>cbid,<sp/>uint32_t<sp/>ntiles)<sp/>{<sp/><ref refid="compute__kernel__api_8h_1a5221b9dd336f28fd88546cf7afe5edaf" kindref="member">UNPACK</ref>((llk_pop_tiles(cbid,<sp/>ntiles)));<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="namespaceckernel_1af917245b58bfd6176048dc6844a7b7fe" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1af917245b58bfd6176048dc6844a7b7fe" kindref="member">cb_reserve_back</ref>(uint32_t<sp/>cbid,<sp/>uint32_t<sp/>ntiles)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="compute__kernel__api_8h_1a06e48c7c5c133a4905da88bd82bd6b91" kindref="member">PACK</ref>((llk_wait_for_free_tiles&lt;false,<sp/>false,<sp/>false&gt;(cbid,<sp/>ntiles)));</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="namespaceckernel_1af6f81e4da52b94a5397f904d446808c9" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1af6f81e4da52b94a5397f904d446808c9" kindref="member">cb_push_back</ref>(uint32_t<sp/>cbid,<sp/>uint32_t<sp/>ntiles)<sp/>{<sp/><ref refid="compute__kernel__api_8h_1a06e48c7c5c133a4905da88bd82bd6b91" kindref="member">PACK</ref>((llk_push_tiles&lt;false,<sp/>false&gt;(cbid,<sp/>ntiles)));<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="namespaceckernel_1a60c38a99abe8e5e072ae3bc9ea35cf23" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1a60c38a99abe8e5e072ae3bc9ea35cf23" kindref="member">cb_get_tile</ref>(uint32_t<sp/>cb_id,<sp/>uint32_t<sp/>index,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_tile)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="compute__kernel__api_8h_1a5221b9dd336f28fd88546cf7afe5edaf" kindref="member">UNPACK</ref>(llk_unpack_get_tile(cb_id,<sp/>index,<sp/>(uint32_t*)p_tile));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="erf__erfc_8h_1a5f8a5b21f170f78a59c6aca4376e757d" kindref="member">MATH</ref>(llk_math_get_tile(cb_id,<sp/>index,<sp/>(uint32_t*)p_tile));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="compute__kernel__api_8h_1a06e48c7c5c133a4905da88bd82bd6b91" kindref="member">PACK</ref>(llk_pack_get_tile(cb_id,<sp/>index,<sp/>(uint32_t*)p_tile));</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="namespaceckernel_1ab833f2a940d6668f992dd77ca06ed03d" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1ab833f2a940d6668f992dd77ca06ed03d" kindref="member">cb_release_tile</ref>(uint32_t<sp/>cb_id)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="compute__kernel__api_8h_1a5221b9dd336f28fd88546cf7afe5edaf" kindref="member">UNPACK</ref>(llk_unpack_release_tile(cb_id));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="erf__erfc_8h_1a5f8a5b21f170f78a59c6aca4376e757d" kindref="member">MATH</ref>(llk_math_release_tile(cb_id));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="compute__kernel__api_8h_1a06e48c7c5c133a4905da88bd82bd6b91" kindref="member">PACK</ref>(llk_pack_release_tile(cb_id));</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ckernel</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tt_metal/include/compute_kernel_api/cb_api.h"/>
  </compounddef>
</doxygen>
