<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="relu_8h" kind="file" language="C++">
    <compoundname>relu.h</compoundname>
    <includes local="yes">compute_kernel_api/common_globals.h</includes>
    <incdepgraph>
      <node id="1">
        <label>tt_metal/include/compute_kernel_api/eltwise_unary/relu.h</label>
        <link refid="relu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>compute_kernel_api/common_globals.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceckernel">ckernel</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="relu_8h_1a5f8a5b21f170f78a59c6aca4376e757d" prot="public" static="no">
        <name>MATH</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tt_metal/include/compute_kernel_api/eltwise_unary/relu.h" line="13" column="11" bodyfile="tt_metal/include/compute_kernel_api/eltwise_unary/relu.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>Â©<sp/>2023<sp/>Tenstorrent<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compute_kernel_api/common_globals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TRISC_MATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;llk_math_eltwise_unary_sfpu_relu.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAIN<sp/>math_main()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATH(x)<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="relu_8h_1a5f8a5b21f170f78a59c6aca4376e757d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATH(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceckernel" kindref="compound">ckernel</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="namespaceckernel_1ab022361921e28e620e0aa64449d707a8" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1ab022361921e28e620e0aa64449d707a8" kindref="member">relu_max_tile</ref>(uint32_t<sp/>idst,<sp/>uint32_t<sp/>param0)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="erf__erfc_8h_1a5f8a5b21f170f78a59c6aca4376e757d" kindref="member">MATH</ref>((llk_math_eltwise_unary_sfpu_relu_max&lt;APPROX&gt;(idst,<sp/>param0)));</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="namespaceckernel_1aebd335c04a4da54f27b29814dc3ba06c" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1aebd335c04a4da54f27b29814dc3ba06c" kindref="member">relu_max_tile_init</ref>()<sp/>{<sp/><ref refid="erf__erfc_8h_1a5f8a5b21f170f78a59c6aca4376e757d" kindref="member">MATH</ref>((llk_math_eltwise_unary_sfpu_relu_max_init&lt;APPROX&gt;()));<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="namespaceckernel_1a2055cc5f849f59581322d4f99aafe7fd" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1a2055cc5f849f59581322d4f99aafe7fd" kindref="member">relu_min_tile</ref>(uint32_t<sp/>idst,<sp/>uint32_t<sp/>param0)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="erf__erfc_8h_1a5f8a5b21f170f78a59c6aca4376e757d" kindref="member">MATH</ref>((llk_math_eltwise_unary_sfpu_relu_min&lt;APPROX&gt;(idst,<sp/>param0)));</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="namespaceckernel_1accf551de7b8a1527a9f8d2ffde7ec468" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1accf551de7b8a1527a9f8d2ffde7ec468" kindref="member">relu_min_tile_init</ref>()<sp/>{<sp/><ref refid="erf__erfc_8h_1a5f8a5b21f170f78a59c6aca4376e757d" kindref="member">MATH</ref>((llk_math_eltwise_unary_sfpu_relu_min_init&lt;APPROX&gt;()));<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="namespaceckernel_1abb21cee43ed0d618c23762c357dcf1c2" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1abb21cee43ed0d618c23762c357dcf1c2" kindref="member">relu_tile</ref>(uint32_t<sp/>idst)<sp/>{<sp/><ref refid="erf__erfc_8h_1a5f8a5b21f170f78a59c6aca4376e757d" kindref="member">MATH</ref>((llk_math_eltwise_unary_sfpu_relu&lt;APPROX&gt;(idst)));<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="namespaceckernel_1a6a214735fbd70467722ab3af7f2fb87b" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1a6a214735fbd70467722ab3af7f2fb87b" kindref="member">relu_tile_init</ref>()<sp/>{<sp/><ref refid="erf__erfc_8h_1a5f8a5b21f170f78a59c6aca4376e757d" kindref="member">MATH</ref>((llk_math_eltwise_unary_sfpu_relu_init&lt;APPROX&gt;()));<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="namespaceckernel_1a8f979e18403c78aab904f362ec748f7e" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1a8f979e18403c78aab904f362ec748f7e" kindref="member">leaky_relu_tile</ref>(uint32_t<sp/>idst,<sp/>uint32_t<sp/>slope)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="erf__erfc_8h_1a5f8a5b21f170f78a59c6aca4376e757d" kindref="member">MATH</ref>((llk_math_eltwise_unary_sfpu_lrelu&lt;APPROX&gt;(idst,<sp/>slope)));</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="namespaceckernel_1ac696b79d37bcb5188163ffb166566ca6" refkind="member"><highlight class="normal"><ref refid="compute__kernel__api_8h_1a102b55d753f30b2569dd7976e1917038" kindref="member">ALWI</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceckernel_1ac696b79d37bcb5188163ffb166566ca6" kindref="member">leaky_relu_tile_init</ref>()<sp/>{<sp/><ref refid="erf__erfc_8h_1a5f8a5b21f170f78a59c6aca4376e757d" kindref="member">MATH</ref>((llk_math_eltwise_unary_sfpu_lrelu_init&lt;APPROX&gt;()));<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ckernel</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tt_metal/include/compute_kernel_api/eltwise_unary/relu.h"/>
  </compounddef>
</doxygen>
