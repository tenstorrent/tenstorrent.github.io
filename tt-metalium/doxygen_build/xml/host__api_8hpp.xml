<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="host__api_8hpp" kind="file" language="C++">
    <compoundname>host_api.hpp</compoundname>
    <includes local="no">variant</includes>
    <includes local="no">vector</includes>
    <includes local="yes">tt_metal/impl/kernels/runtime_args_data.hpp</includes>
    <includes local="yes">tt_metal/impl/program/program.hpp</includes>
    <includes local="yes">tt_metal/impl/device/device.hpp</includes>
    <includes local="yes">tt_metal/impl/sub_device/sub_device_types.hpp</includes>
    <includes local="yes">tt_metal/tt_stl/span.hpp</includes>
    <includedby refid="types_8hpp" local="yes">tt_metal/include/tt_metal/types.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>tt_metal/host_api.hpp</label>
        <link refid="host__api_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>tt_metal/impl/device/device.hpp</label>
      </node>
      <node id="4">
        <label>tt_metal/impl/kernels/runtime_args_data.hpp</label>
      </node>
      <node id="5">
        <label>tt_metal/impl/program/program.hpp</label>
      </node>
      <node id="7">
        <label>tt_metal/impl/sub_device/sub_device_types.hpp</label>
      </node>
      <node id="8">
        <label>tt_metal/tt_stl/span.hpp</label>
      </node>
      <node id="2">
        <label>variant</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>tt_metal/host_api.hpp</label>
        <link refid="host__api_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>tt_metal/include/tt_metal/buffer.hpp</label>
        <link refid="buffer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>tt_metal/include/tt_metal/command_queue.hpp</label>
        <link refid="command__queue_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>tt_metal/include/tt_metal/device.hpp</label>
        <link refid="device_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>tt_metal/include/tt_metal/event.hpp</label>
        <link refid="event_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>tt_metal/include/tt_metal/global_circular_buffer.hpp</label>
        <link refid="global__circular__buffer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>tt_metal/include/tt_metal/kernel.hpp</label>
        <link refid="kernel_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tt_metal/include/tt_metal/metal.hpp</label>
        <link refid="metal_8hpp"/>
      </node>
      <node id="10">
        <label>tt_metal/include/tt_metal/program.hpp</label>
        <link refid="program_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>tt_metal/include/tt_metal/trace.hpp</label>
        <link refid="trace_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tt_metal/include/tt_metal/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacett">tt</innernamespace>
    <innernamespace refid="namespacett_1_1tt__metal">tt::tt_metal</innernamespace>
    <innernamespace refid="namespacett_1_1tt__metal_1_1v0" inline="yes">tt::tt_metal::v0</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>Â©<sp/>2023<sp/>Tenstorrent<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;variant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tt_metal/impl/kernels/runtime_args_data.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tt_metal/impl/program/program.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tt_metal/impl/device/device.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tt_metal/impl/sub_device/sub_device_types.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tt_metal/tt_stl/span.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CoreRange;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CoreRangeSet;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespacett" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacett" kindref="compound">tt</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="namespacett_1_1tt__metal" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tt_metal<sp/>{</highlight></codeline>
<codeline lineno="34" refid="namespacett_1_1tt__metal_1_1v0" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v0<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Program;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Device;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CommandQueue;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Trace;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CircularBuffer;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Event;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Buffer;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GlobalSemaphore;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HOST<sp/>API:<sp/>Device<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="namespacett_1_1tt__metal_1_1v0_1a1e4322b747fd7823e878c3e2ae729e27" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a1e4322b747fd7823e878c3e2ae729e27" kindref="member">GetNumAvailableDevices</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="namespacett_1_1tt__metal_1_1v0_1a63ede0a0180762c7d1f091176738237c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a63ede0a0180762c7d1f091176738237c" kindref="member">IsGalaxyCluster</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="namespacett_1_1tt__metal_1_1v0_1a4f05b332fd6f861bb3540dbe2af433be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a4f05b332fd6f861bb3540dbe2af433be" kindref="member">GetNumPCIeDevices</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="namespacett_1_1tt__metal_1_1v0_1af46d5827805ba92482cddb5591c69a45" refkind="member"><highlight class="normal">chip_id_t<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1af46d5827805ba92482cddb5591c69a45" kindref="member">GetPCIeDeviceID</ref>(chip_id_t<sp/>device_id);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="82"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="namespacett_1_1tt__metal_1_1v0_1a8502cc6c6cdec4f09d468182e621325c" refkind="member"><highlight class="normal">Device*<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a8502cc6c6cdec4f09d468182e621325c" kindref="member">CreateDevice</ref>(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>chip_id_t<sp/>device_id,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>num_hw_cqs<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l1_small_size<sp/>=<sp/>DEFAULT_L1_SMALL_SIZE,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>trace_region_size<sp/>=<sp/>DEFAULT_TRACE_REGION_SIZE,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DispatchCoreConfig&amp;<sp/>dispatch_core_config<sp/>=<sp/>DispatchCoreConfig{},</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>l1_bank_remap<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="namespacett_1_1tt__metal_1_1v0_1a23165f9a0b1bdc1b4ef3e585e4d52ab0" refkind="member"><highlight class="normal">Device*<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a23165f9a0b1bdc1b4ef3e585e4d52ab0" kindref="member">CreateDeviceMinimal</ref>(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>chip_id_t<sp/>device_id,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>num_hw_cqs<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DispatchCoreConfig&amp;<sp/>dispatch_core_config<sp/>=<sp/>DispatchCoreConfig{});</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="117"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="namespacett_1_1tt__metal_1_1v0_1a26cb44c89e3231cade68dca1a6990bbb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a26cb44c89e3231cade68dca1a6990bbb" kindref="member">CloseDevice</ref>(Device*<sp/>device);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HOST<sp/>API:<sp/>program<sp/>&amp;<sp/>kernels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="130"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="namespacett_1_1tt__metal_1_1v0_1a826db8a9c40c91034bc2a5f0f6e9b75e" refkind="member"><highlight class="normal">Program<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a826db8a9c40c91034bc2a5f0f6e9b75e" kindref="member">CreateProgram</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="146"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="namespacett_1_1tt__metal_1_1v0_1a0e68e0e2cb813bf5814ddb02d82cd1d0" refkind="member"><highlight class="normal">KernelHandle<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a0e68e0e2cb813bf5814ddb02d82cd1d0" kindref="member">CreateKernel</ref>(</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>Program&amp;<sp/>program,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file_name,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::variant&lt;CoreCoord,<sp/>CoreRange,<sp/>CoreRangeSet&gt;&amp;<sp/>core_spec,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::variant&lt;DataMovementConfig,<sp/>ComputeConfig,<sp/>EthernetConfig&gt;&amp;<sp/>config);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="166"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="namespacett_1_1tt__metal_1_1v0_1a63aefd0f3f82e3dd0d66ff2ca72453c8" refkind="member"><highlight class="normal">KernelHandle<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a63aefd0f3f82e3dd0d66ff2ca72453c8" kindref="member">CreateKernelFromString</ref>(</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>Program&amp;<sp/>program,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kernel_src_code,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::variant&lt;CoreCoord,<sp/>CoreRange,<sp/>CoreRangeSet&gt;&amp;<sp/>core_spec,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::variant&lt;DataMovementConfig,<sp/>ComputeConfig,<sp/>EthernetConfig&gt;&amp;<sp/>config);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HOST<sp/>API:<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================================================</highlight></codeline>
<codeline lineno="193"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="namespacett_1_1tt__metal_1_1v0_1a4b1e837406fd39ad2b671b7836ce3e4c" refkind="member"><highlight class="normal">CBHandle<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a4b1e837406fd39ad2b671b7836ce3e4c" kindref="member">CreateCircularBuffer</ref>(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>Program&amp;<sp/>program,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::variant&lt;CoreCoord,<sp/>CoreRange,<sp/>CoreRangeSet&gt;&amp;<sp/>core_spec,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CircularBufferConfig&amp;<sp/>config);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="210"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="namespacett_1_1tt__metal_1_1v0_1ac4b1a13298da52770f32ddeeabd2c65a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CircularBufferConfig&amp;<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1ac4b1a13298da52770f32ddeeabd2c65a" kindref="member">GetCircularBufferConfig</ref>(Program&amp;<sp/>program,<sp/>CBHandle<sp/>cb_handle);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="226"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="namespacett_1_1tt__metal_1_1v0_1a220dc8a16809c1c12a44348b9a76ab08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a220dc8a16809c1c12a44348b9a76ab08" kindref="member">UpdateCircularBufferTotalSize</ref>(Program&amp;<sp/>program,<sp/>CBHandle<sp/>cb_handle,<sp/>uint32_t<sp/>total_size);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="242"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="namespacett_1_1tt__metal_1_1v0_1a3831e993c64a578637c9fc73b059412d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a3831e993c64a578637c9fc73b059412d" kindref="member">UpdateCircularBufferPageSize</ref>(Program&amp;<sp/>program,<sp/>CBHandle<sp/>cb_handle,<sp/>uint8_t<sp/>buffer_index,<sp/>uint32_t<sp/>page_size);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="258"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="namespacett_1_1tt__metal_1_1v0_1a0cf0d51e979e755908ee29c30401ee53" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a0cf0d51e979e755908ee29c30401ee53" kindref="member">UpdateDynamicCircularBufferAddress</ref>(Program&amp;<sp/>program,<sp/>CBHandle<sp/>cb_handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer&amp;<sp/>buffer);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="274" refid="namespacett_1_1tt__metal_1_1v0_1a56aa79053d933dc45936e054942c9860" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a56aa79053d933dc45936e054942c9860" kindref="member">UpdateDynamicCircularBufferAddressAndTotalSize</ref>(Program&amp;<sp/>program,<sp/>CBHandle<sp/>cb_handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer&amp;<sp/>buffer,<sp/>uint32_t<sp/>total_size);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="namespacett_1_1tt__metal_1_1v0_1ad7ce765d28d851983f910495c44411cd" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1ad7ce765d28d851983f910495c44411cd" kindref="member">CreateSemaphore</ref>(</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>Program&amp;<sp/>program,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::variant&lt;CoreRange,<sp/>CoreRangeSet&gt;&amp;<sp/>core_spec,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>initial_value,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>CoreType<sp/>core_type<sp/>=<sp/>CoreType::WORKER);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="310"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="namespacett_1_1tt__metal_1_1v0_1acc00b263f039c80403524431d432cb9c" refkind="member"><highlight class="normal">GlobalSemaphore<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1acc00b263f039c80403524431d432cb9c" kindref="member">CreateGlobalSemaphore</ref>(</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>Device*<sp/>device,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CoreRangeSet&amp;<sp/>cores,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>initial_value,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>BufferType<sp/>buffer_type<sp/>=<sp/>BufferType::L1,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>tt::stl::Span&lt;const<sp/>SubDeviceId&gt;<sp/>sub_device_ids<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="333"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="namespacett_1_1tt__metal_1_1v0_1aed86ed7ca1141d55ec8afaaa0adf8813" refkind="member"><highlight class="normal">GlobalSemaphore<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1acc00b263f039c80403524431d432cb9c" kindref="member">CreateGlobalSemaphore</ref>(</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>Device*<sp/>device,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>CoreRangeSet&amp;&amp;<sp/>cores,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>initial_value,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>BufferType<sp/>buffer_type<sp/>=<sp/>BufferType::L1,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>tt::stl::Span&lt;const<sp/>SubDeviceId&gt;<sp/>sub_device_ids<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="351"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="namespacett_1_1tt__metal_1_1v0_1aec7794124ecb8f3b20ffe95a4c8b390d" refkind="member"><highlight class="normal">std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1aec7794124ecb8f3b20ffe95a4c8b390d" kindref="member">CreateBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InterleavedBufferConfig&amp;<sp/>config);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="365"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="namespacett_1_1tt__metal_1_1v0_1a74ad24acd85d50aebe09a2220fd1237c" refkind="member"><highlight class="normal">std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1aec7794124ecb8f3b20ffe95a4c8b390d" kindref="member">CreateBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InterleavedBufferConfig&amp;<sp/>config,<sp/>DeviceAddr<sp/>address);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="379"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="namespacett_1_1tt__metal_1_1v0_1a88eb77e75d74b91bec6ad22064eb3b38" refkind="member"><highlight class="normal">std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1aec7794124ecb8f3b20ffe95a4c8b390d" kindref="member">CreateBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InterleavedBufferConfig&amp;<sp/>config,<sp/>SubDeviceId<sp/>sub_device_id);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="392"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="namespacett_1_1tt__metal_1_1v0_1a6c254d5b77d19539fd7999c73b7606ad" refkind="member"><highlight class="normal">std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1aec7794124ecb8f3b20ffe95a4c8b390d" kindref="member">CreateBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShardedBufferConfig&amp;<sp/>config);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="406"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="namespacett_1_1tt__metal_1_1v0_1ac9703a61146ccd855bea828aade6a720" refkind="member"><highlight class="normal">std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1aec7794124ecb8f3b20ffe95a4c8b390d" kindref="member">CreateBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShardedBufferConfig&amp;<sp/>config,<sp/>DeviceAddr<sp/>address);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="420"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="namespacett_1_1tt__metal_1_1v0_1ac9b0f4582de81688db0f46ab932f74f8" refkind="member"><highlight class="normal">std::shared_ptr&lt;Buffer&gt;<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1aec7794124ecb8f3b20ffe95a4c8b390d" kindref="member">CreateBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShardedBufferConfig&amp;<sp/>config,<sp/>SubDeviceId<sp/>sub_device_id);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="433"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="namespacett_1_1tt__metal_1_1v0_1abce385d98e86cf18acb680f183039cb5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1abce385d98e86cf18acb680f183039cb5" kindref="member">DeallocateBuffer</ref>(Buffer&amp;<sp/>buffer);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="447"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="namespacett_1_1tt__metal_1_1v0_1a1ebc34320ecacb398a25f67c206422d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a1ebc34320ecacb398a25f67c206422d5" kindref="member">AssignGlobalBufferToProgram</ref>(std::shared_ptr&lt;Buffer&gt;<sp/>buffer,<sp/>Program&amp;<sp/>program);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPILE<sp/>&amp;<sp/>EXECUTE<sp/>KENRNELS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="namespacett_1_1tt__metal_1_1v0_1a4d311514040f724ea391cb7f212a810b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacett_1_1tt__metal_1_1v0_1a4d311514040f724ea391cb7f212a810b" kindref="member">RuntimeArgs</ref><sp/>=<sp/>std::vector&lt;std::variant&lt;Buffer*,<sp/>uint32_t&gt;&gt;;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="470"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="namespacett_1_1tt__metal_1_1v0_1afb2ca08d5f123ed98b99498324061ba4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1afb2ca08d5f123ed98b99498324061ba4" kindref="member">SetRuntimeArgs</ref>(</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Program&amp;<sp/>program,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>KernelHandle<sp/>kernel,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::variant&lt;CoreCoord,<sp/>CoreRange,<sp/>CoreRangeSet&gt;&amp;<sp/>core_spec,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>stl::Span&lt;const<sp/>uint32_t&gt;<sp/>runtime_args);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="491"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="namespacett_1_1tt__metal_1_1v0_1a74ca7c2b7c798d3c16af2dc931d68df0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1afb2ca08d5f123ed98b99498324061ba4" kindref="member">SetRuntimeArgs</ref>(</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Program&amp;<sp/>program,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>KernelHandle<sp/>kernel,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CoreCoord&gt;&amp;<sp/>core_spec,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;uint32_t&gt;&gt;&amp;<sp/>runtime_args);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="512"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="namespacett_1_1tt__metal_1_1v0_1a904971f5d8ecdb9d80f84a9ea9a54bd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1afb2ca08d5f123ed98b99498324061ba4" kindref="member">SetRuntimeArgs</ref>(</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>Device*<sp/>device,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Kernel&gt;&amp;<sp/>kernel,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::variant&lt;CoreCoord,<sp/>CoreRange,<sp/>CoreRangeSet&gt;&amp;<sp/>core_spec,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RuntimeArgs&gt;<sp/>runtime_args);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="532"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="namespacett_1_1tt__metal_1_1v0_1abadad6cfd6751695fbc5bbd432536a91" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1afb2ca08d5f123ed98b99498324061ba4" kindref="member">SetRuntimeArgs</ref>(</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>Device*<sp/>device,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Kernel&gt;&amp;<sp/>kernel,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;CoreCoord&gt;&amp;<sp/>core_spec,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;RuntimeArgs&gt;&gt;&amp;<sp/>runtime_args);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="552"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="namespacett_1_1tt__metal_1_1v0_1a8263eba8cd8279b6c1e6db233ec5f133" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a8263eba8cd8279b6c1e6db233ec5f133" kindref="member">SetCommonRuntimeArgs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Program&amp;<sp/>program,<sp/>KernelHandle<sp/>kernel_id,<sp/>stl::Span&lt;const<sp/>uint32_t&gt;<sp/>runtime_args);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="567"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="namespacett_1_1tt__metal_1_1v0_1a609d42acfdab49842d577aae66de2e67" refkind="member"><highlight class="normal">RuntimeArgsData&amp;<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a609d42acfdab49842d577aae66de2e67" kindref="member">GetRuntimeArgs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Program&amp;<sp/>program,<sp/>KernelHandle<sp/>kernel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CoreCoord&amp;<sp/>logical_core);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="581"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="namespacett_1_1tt__metal_1_1v0_1a65abc534c2bbbe36d118c3b844350a72" refkind="member"><highlight class="normal">std::vector&lt;std::vector&lt;RuntimeArgsData&gt;&gt;&amp;<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a609d42acfdab49842d577aae66de2e67" kindref="member">GetRuntimeArgs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Program&amp;<sp/>program,<sp/>KernelHandle<sp/>kernel_id);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="595"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="namespacett_1_1tt__metal_1_1v0_1a9117d8f938e3b0c3e6b146f960eafa2f" refkind="member"><highlight class="normal">RuntimeArgsData&amp;<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a9117d8f938e3b0c3e6b146f960eafa2f" kindref="member">GetCommonRuntimeArgs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Program&amp;<sp/>program,<sp/>KernelHandle<sp/>kernel_id);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="612"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="namespacett_1_1tt__metal_1_1v0_1a76bb833452d2265a33a294eef1140782" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a76bb833452d2265a33a294eef1140782" kindref="member">EnqueueReadBuffer</ref>(</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>CommandQueue&amp;<sp/>cq,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>std::variant&lt;std::reference_wrapper&lt;Buffer&gt;,<sp/>std::shared_ptr&lt;Buffer&gt;&gt;<sp/>buffer,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blocking,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>tt::stl::Span&lt;const<sp/>SubDeviceId&gt;<sp/>sub_device_ids<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="634"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="636" refid="namespacett_1_1tt__metal_1_1v0_1aed6950194c0970fe3d6f35657524e44b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a76bb833452d2265a33a294eef1140782" kindref="member">EnqueueReadBuffer</ref>(</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>CommandQueue&amp;<sp/>cq,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer&amp;<sp/>buffer,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DType&gt;&amp;<sp/>dst,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blocking,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>tt::stl::Span&lt;const<sp/>SubDeviceId&gt;<sp/>sub_device_ids<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.resize(buffer.page_size()<sp/>*<sp/>buffer.num_pages()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DType));</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a76bb833452d2265a33a294eef1140782" kindref="member">EnqueueReadBuffer</ref>(cq,<sp/>buffer,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dst.data()),<sp/>blocking,<sp/>sub_device_ids);</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="646" refid="namespacett_1_1tt__metal_1_1v0_1adfbc3816d634690201a2864b0e6ea1d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a76bb833452d2265a33a294eef1140782" kindref="member">EnqueueReadBuffer</ref>(</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>CommandQueue&amp;<sp/>cq,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Buffer&gt;<sp/>buffer,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DType&gt;&amp;<sp/>dst,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blocking,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>tt::stl::Span&lt;const<sp/>SubDeviceId&gt;<sp/>sub_device_ids<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a76bb833452d2265a33a294eef1140782" kindref="member">EnqueueReadBuffer</ref>(cq,<sp/>*buffer,<sp/>dst,<sp/>blocking,<sp/>sub_device_ids);</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="670"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DType&gt;</highlight></codeline>
<codeline lineno="672" refid="namespacett_1_1tt__metal_1_1v0_1a7c3bea917e3563c642147c3f34911270" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a7c3bea917e3563c642147c3f34911270" kindref="member">EnqueueWriteBuffer</ref>(</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>CommandQueue&amp;<sp/>cq,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>std::variant&lt;std::reference_wrapper&lt;Buffer&gt;,<sp/>std::shared_ptr&lt;Buffer&gt;&gt;<sp/>buffer,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DType&gt;&amp;<sp/>src,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blocking,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>tt::stl::Span&lt;const<sp/>SubDeviceId&gt;<sp/>sub_device_ids<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a7c3bea917e3563c642147c3f34911270" kindref="member">EnqueueWriteBuffer</ref>(cq,<sp/>buffer,<sp/>src.data(),<sp/>blocking,<sp/>sub_device_ids);</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="695"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696" refid="namespacett_1_1tt__metal_1_1v0_1a634370b608fd0b78795ab3d7b128c9f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a7c3bea917e3563c642147c3f34911270" kindref="member">EnqueueWriteBuffer</ref>(</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>CommandQueue&amp;<sp/>cq,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>std::variant&lt;std::reference_wrapper&lt;Buffer&gt;,<sp/>std::shared_ptr&lt;Buffer&gt;&gt;<sp/>buffer,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>HostDataType<sp/>src,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blocking,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>tt::stl::Span&lt;const<sp/>SubDeviceId&gt;<sp/>sub_device_ids<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="715"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="namespacett_1_1tt__metal_1_1v0_1ab74d31b79ae9a8fe25468bc95b13ee2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1ab74d31b79ae9a8fe25468bc95b13ee2a" kindref="member">EnqueueProgram</ref>(CommandQueue&amp;<sp/>cq,<sp/>Program&amp;<sp/>program,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blocking);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="729"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="namespacett_1_1tt__metal_1_1v0_1a41ad47ba118422cf5d162a24289f53cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a41ad47ba118422cf5d162a24289f53cb" kindref="member">Finish</ref>(CommandQueue&amp;<sp/>cq,<sp/>tt::stl::Span&lt;const<sp/>SubDeviceId&gt;<sp/>sub_device_ids<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="745"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746" refid="namespacett_1_1tt__metal_1_1v0_1a2ebe853244ec21092c0a4c24a76ac9d7" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a2ebe853244ec21092c0a4c24a76ac9d7" kindref="member">BeginTraceCapture</ref>(Device*<sp/>device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>cq_id);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="763"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="namespacett_1_1tt__metal_1_1v0_1a868dff83af5a6f69735afddfb8123016" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a868dff83af5a6f69735afddfb8123016" kindref="member">EndTraceCapture</ref>(Device*<sp/>device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>cq_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>tid);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="779"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="namespacett_1_1tt__metal_1_1v0_1aaf7e23130adb368821457f261e37cd9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1aaf7e23130adb368821457f261e37cd9b" kindref="member">ReplayTrace</ref>(Device*<sp/>device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>cq_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>tid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blocking);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="795"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796" refid="namespacett_1_1tt__metal_1_1v0_1ad8540d48e27a58a9519483782991eba0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1ad8540d48e27a58a9519483782991eba0" kindref="member">ReleaseTrace</ref>(Device*<sp/>device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>tid);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="811"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="namespacett_1_1tt__metal_1_1v0_1a35c2d778c2f00844d1113c0e011522f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a35c2d778c2f00844d1113c0e011522f2" kindref="member">EnqueueTrace</ref>(CommandQueue&amp;<sp/>cq,<sp/>uint32_t<sp/>trace_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blocking);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="827"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828" refid="namespacett_1_1tt__metal_1_1v0_1a617bb9ae1b430271808f81999a4ef53e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a617bb9ae1b430271808f81999a4ef53e" kindref="member">DumpDeviceProfileResults</ref>(Device*<sp/>device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Program&amp;<sp/>program);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="840"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841" refid="namespacett_1_1tt__metal_1_1v0_1a57cb44e976abef6030c7dbb73970d800" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a57cb44e976abef6030c7dbb73970d800" kindref="member">EnqueueRecordEvent</ref>(</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>CommandQueue&amp;<sp/>cq,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Event&gt;&amp;<sp/>event,<sp/>tt::stl::Span&lt;const<sp/>SubDeviceId&gt;<sp/>sub_device_ids<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="854"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855" refid="namespacett_1_1tt__metal_1_1v0_1a0348eff37a292f881b5b88193d8196f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a0348eff37a292f881b5b88193d8196f6" kindref="member">EnqueueWaitForEvent</ref>(CommandQueue&amp;<sp/>cq,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Event&gt;&amp;<sp/>event);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="865"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866" refid="namespacett_1_1tt__metal_1_1v0_1a7965734b9b4f42fd7b96da7cdcc45927" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a7965734b9b4f42fd7b96da7cdcc45927" kindref="member">EventSynchronize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Event&gt;&amp;<sp/>event);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="876"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877" refid="namespacett_1_1tt__metal_1_1v0_1a51fd82461b3734afccb8f11427564181" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1a51fd82461b3734afccb8f11427564181" kindref="member">EventQuery</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Event&gt;&amp;<sp/>event);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight></codeline>
<codeline lineno="893"><highlight class="comment"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894" refid="namespacett_1_1tt__metal_1_1v0_1abbef214f3ba879469488d367053046cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacett_1_1tt__metal_1_1v0_1abbef214f3ba879469488d367053046cb" kindref="member">Synchronize</ref>(</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>Device*<sp/>device,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;uint8_t&gt;<sp/>cq_id<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>tt::stl::Span&lt;const<sp/>SubDeviceId&gt;<sp/>sub_device_ids<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>v0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tt_metal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tt</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tt_metal/host_api.hpp"/>
  </compounddef>
</doxygen>
